workflows:
 ios-workflow:
    name: iOS Workflow
    # instance_type: mac_mini
    max_build_duration: 120
    environment:
      groups:
        - test_ios
      vars:
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"                
        BUNDLE_ID: "com.example.flutterAndroidCmyamlApp" # <-- Put your bundle id here
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Get Flutter packages
        script: |
          cd . && flutter packages pub get
      - name: Flutter analyze
        script: |
          cd . && flutter analyze
      - name: Flutter unit tests
        script: |
          cd . && flutter test
        ignore_failure: true          
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Flutter build ipa and automatic versioning
        script: |
          flutter build ipa --release \
          --build-name=1.0.0 \
          --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1)) \
          --export-options-plist=/Users/builder/export_options.plist
      - name: Test
        script: |
          xcodebuild -scheme Runner build-for-testing
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log









# workflows:
#   default-workflow:
#     name: Default Workflow
#     instance_type: linux_x2
#     max_build_duration: 60
#     environment:
# #       groups:
# #          - android
#       groups:
#          - firebase
#       vars:
#         FCI_KEYSTORE_PATH: /tmp/keystore.keystore
#         FCI_KEYSTORE: Encrypted(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)
#         FCI_KEYSTORE: Encrypted(Z0FBQUFBQmc1LWRsLThFOF90MHRQaGdtb2V5NWJvbDlrQmttX3FLYzdjRFdtNHZPMFo5LTFFWE8zYU9IRUR0MW05dlhQTmpsdjJmYTA4ZU0xenJ5YTM5TmcwdG1TVmM0U3h5M2VBa19EWnhzeE5rSUhPYko3RXo1U0VrNGtLYkVZa29qcF9OVlNBcWEwYkZuSzU0WWNRR19GY2VWWjQtX2hrY2JoS3ppcUhZRzRrcTZZU2dyamNzdWQwMmM0dGFmb0hqT1ltYUtOcnNEMGJRTldoakdYYVJzcF9HcHFSRk9MbE5Pb0plcmFlNGFlZnVUWFZUc3ZyT19TaHFVOHJMeWk1aGxYQlZja0thdTFPLWhhZmFxMHQ4WlZETmJOV3RmMDNfZVY1X0FFTXhYa1A4WDJDSU5PazJOZXNTQW85R3BRNFk4d1dVVVJlRFlnS0xYYnJGR1pfcWFZWFFkZzhFcEtTNUh1blI5S2RvY2toRklmcTc2SUdtdWNncnFfb0I4OGZyQlMzTWdhQnAtUkN5VjRVY0FWZGpDeHNtbVl6LUYyejVFZXB2cTJRcnpqYTg5czU4MVc1STFrWmQ5N2hpVEI0ZEU0ZTA3Wm5QOW81elZZRnpORmhhY2JXcFJIc29TaHpxVWVtNlFGU0pXM0s3bE55Nnd2TndSTGdmLV85X1p3LU5EZ3BzdS1nRHo3d1o0VXN0R2QxZ1haOWZaSDFrclNwSXRVY2NDSWFJdnlIc2ZXVXQ1YzhyRW1qSFVqN1B4RWlJdGtQNHdWNE1BZEdhYTJ0bVlTOW1WVnA4Z3FRZWNHNm83OWdTcFpramJxaHRveDZNcXZuWGluOG1YQnRNNjBMaWpudElNWDlRSXZqUmlXM3RCN0l5cFloSExkb25JTzVGU01kN3NQWGJvUU9hRWtPeDRSTlMydmVVN1NiV0lCQ0NHOU1XM2QzZ1BkSjdqLU1VZzhlQlhqUHlfeHJRSXAtRHRjaHk5YWRHdm9YM1kyT0hhYlExaVFobkFuWTQxLS1uNjFmS1NyQnVoa004Q1BGOFRXSEhnV1NhUlRLNG9aNG1pMDAwY1QtSmFHVFdyaFJmRmI4Ri05U0lTLV9sVFJOSVk4ZktBZmhVNnVsYW9EVXh4VVdvWFBXTnFOQ3ZKTjB4bTd5ZWxFbVQ2dURMZjI3YTBCeXdkSUoxX0N1LVVua3pka28wVUg3dk8wZ3Z6Q1pJNFk1ZUJyNzRMdlZDZnFuOG0zblExVW83N3J6aGRkSGNBeldVUk1ISmZkUUNYblFjeDNDRDBPSDhmRU94YUFGUy1tSERDT2RfXzNCV1NabnBMbGRSeTNKdTZRbWJPRVdxbmYwam00YWhxQk5vNWZJYlFTQjJHOExHQzcyVDhmc0Ixd2N0eDk0UGtuUzVPZXNrMFI1a0JYWHd0MVVhM21fR0JqMmpBcmRzVl9nUW5zT2xzNkttVHljS0ZCdFN4c0wydTdiWDFuRlZBQU5INFRlNUM4RGlKUzdHeU5jeWh6bUc5SXhEa0w1Umh0ZkdvYndEUGFRSWRYQ2lFeG14a2pMQzRHUzNEdGtYeFY3VExMOUFDUVBMd1Q2V1E3bXRFNnZVa0JhQV9nWEY4U3lhSU0wQXpiNE1DZU9wXzBrUmhaZjkya3hUQXpoeTU2OVZFLVVjSUpyY0diS21pNjlsVnhtb0Q2T1B1QzMzZmNuQVRPNGRKRF9SYTI4YXU1UkgzZDZBeFB1OHRDUFNBQkpSeEpERk9IbEMyRm82UWtqZnY4bjBjS0pta1pyN3lSZ1pvTjlpeG5Ud1VzSkVDWU1qX3Z6T1J0TWV1bElsNk8zMW8zZnVlcUpXeV9tSmc4OGEzZmVFSFFCYWNmYUpwRWZXd2hWM3lPVVNFaGNzYXhOcnhfUFpxVjNYeGoxcVlrLTQ0SjdwbTFETVJ0NkFNRXdpQnozT3JRTUNqNERrRnAwdzctWXA3czNVRHprZFMwU2FLLTl4X1duZFNrQXRac2NwbXBkNkltZHFYZ25uWmg1cXd5R1JHckFZa2EwdkE2am10VVJHcVZQRW52ZENrVzBmaVRWV0tZc0pKOU5wdW1Qam1OblRoV0JTc2tEV2hGcHRaWmZEYnRWdWxVSHg0eTR0Rmh1SXItOXNOVnpOcmVBR0FUbjVHY3A3WUE2ajFTQzFmQ19VZEd5M1FQSE1TcU1faUtYV2FVQ050TE42TWhLMVUtaGxLSENERjBuYnlPVHdQUi15T0htOGNvc2NoRHpCNmpMVzItanhLUGl2WGR6c3FaMVVUc3hrbEg2dzVHNm52aEc0czJrWmJjZkx1Z2dKbXhpb0taZDlBZ0RHdXRrUTFCNWtZTUZuLWtjZmNCU2lmemZ0djBYS19UTFd1Zy1PNWFhdGU4NWp2Zm1CeEk3ZjVfVk41Mlcza0FsOW04LXRlVC15S0d6UUJ4RUpEeVE4SUFqaG4weFZBZkJTT3JxM0E3d3pNNk55dWxYMUt4bDBTVk04YWthbF83My1UUGpudzUxZGJNQk1NOGZCWHBBRDBtS0VUaldFVE9uci1lU2dSeGh1WU1MU0FZQ3hQU2d3VzVreGt3YnhsaEwzdlhYaHRPV2ZVVUtGN0NPbXVFbnB1YlpmQTAtQTFVUnd1aU9zcUhJeXVhMldkeEhsWVpVZXY4RnJVNDFZWE94U0FfRFppYVY5cjFqNy1aU05MT1NoN2VzZUtMemUtYVhCbzlGVC1hVGhRRVBlTGdDdEs1a0EtRmwyNVNLRXJJRF9aTXRkam5qMzkxcmV1NURJWnlveW01VmVicHZya2RWSXVKblA5RjR5X1dXczdaMWRvUVI4OXlUa3BQVVowMURxVWRSeWExc0VqWHVubkFodnZLLVBGck8yMjRhYlV3S0kxNy0xSDFVTzV4Y2JKM2Z2SW1pdXFYaFlLWko0eXFjN0xXdWxha1pPdnhlbGtuaDNBdnF4eWRReVdZRWlqTWZJQTBLX05GbWY4YkE1dlh1R0kweXFSNHExbzhacFRLSEdWaGU3T1VaZ3JMTGRjdGlNYmFFQWRDaTlkR1dZTS1QUi1NbXJkVG8wNU1UT1Z5a2x4M2syYXVBNy1qWlNqc3FrRVVXUFRmTmIzZ0JLb3lFRFhvcHI1ZHhXUUVhT1ZqX3lTc281NG82NTNYR2dKRkJPN2lFSnV1M3B0T29wZHVIVUMtc2RBV2t6eERRQ2hmSGRDa3doY0o5WXIyNldIMDExQlkxSVlWRkhnY181THVHY0FBMklLdVk0a0p2bnZPeDZKd0RzTk1JcVB1dV9IT25KdHh5VHJDTHJKUEtjbGhidWc0QXZyemVuNHRhV1p5RFNrMjE5NE9BY21VcTBzMWtoODRJUGNyTUVlZHlHZWNlTjJXSURxY09jV19JWW9kanpFeXlEMkd2QmJmZThKZUpkYjhra2hBemktNTNRV2F2VEdJQy1YYUxlSkV2ZGltWmpCdTBtWlJsODBETXF1X00zempRUldTeW1JSWhjeTE4eFBvWmRnODZ4bXZ2bk9pQnV2NjhQUVJsOFl1YURRNnRUR3RwX3ljTXpLVGdRcnhvZjBhQjViQ0o4ZUMtam5KOUhpRXZkQ1BFS0ZYME1pMmN6X0FhaXB0UGVudDRRMGZ4ZnYwUnJ4VWwta2dKdkp2YXVELUpoSXlKeXBBU1FkdTVHbmpzRUJQWFVWd2pYN3R3QjRndzg3ZVpyamQzQllWZmFFQWlLdmlza1FOSktBU2U2TUU0NGo0VWlIYWNhbDRZbmFlS3F6aWh5NjdXNzlOaHF4RnloRklIdU5NaFJvMU5EYjVKRHZGemVScjVaTS1tMTBMSUlFaVJHaGd3NGpuVGJFY0Njck00Sm5qdDJySWVnLTJweGt0UUlNejJIU1hvZXVwdkdvYllGMFZ0Z20zQlRhaHhjQXNRTVFvYlRYT0YyMlBTWGNzVmFkbzk5Q1liWXJMNS1aV1NGTUgxVmoxTkt0ZXpJUG8yS19ZNW5vWXRUQzRYdmJURi1fWjJIMGtiX1NyWU14RHhIZGFXeE43QzFMYjJValA3TjdqajJSX0VPaHRaMkdnNUxaN1ItSnozNVoxekQ2cC1XeFllbkZxeXo5ZnpNdmZGTVpBaWpuT1hIUElmcW9DYWl4WWVyWkU0RkJlc0hKRmNpSGJNVlQ5R2NtMmc5SnBvalVnemJLNlU1dG56YS1IdWpOTDRHdlFxNmlQSTJyaUlfaENqOWd2RGJjbVNvZURmWkRSeU11X0lVYlgzUk51bkQ0VUVfa1U0TWE2TV9rcnhzR1VBdXhrY0EzUnZWOUFlNTRBVV9Cd0J6SEpWdkJ2eDhQYllqYnBrLW03UV9OaU5OTEo1OV9sazA3X0ZEd21IZXpPLVFaNG5Rc003TUZXeTBUUHRkNEdSdkd6dm9XUk9CLU82blhpTVhCR0w0emlZWjVTQ012S1NiMzA3Ti0xUDk4cmllSG5GcEhSWkNPWmxMaGJFQ2xyY1ctZWc1VnJxQldsZGlSWTZ5OVUySWhnTUozb0RWQ2ZzWU9tLWlGVGtuSEJiX2tYZTQ0ZnBxekZDSW1kenRTQjVBR2RwbV81YWV1VHFvSW12V09hUWFaaEdmSGEzMW5nWWJkLTBkVGxPMTZDeE5KNVZaNmRuQzFRclg0ZFhjODZ5bnY1bEp1THVraUR0Q1RUS1lYTThFNmJyRFNkUmpLMXl2OXVsX0dLU1RvcHRPbDZ2VFJ2bWhvUTAyMWNpbFFpYnhRUGw5aUdhMjdrVVlsM0pwaWlRTGRXRllWS2RYTlFtUUN3alFMaEZ2bXJlcEljVndWMWgza3FJZjk1NnZjRHdYSUZkcVFIT2RfcGJDcloyTGFsTzdab0trT2s0VnIzZHZwbHIzX19mN1kzb2ZtN1NkS2V4eFJfS2poOVRGOTZzcEVkYUJxNjkxbFFWNmJ3aHRrUzZqSFZSRm1pd0ZnSW5NM2F3TUhlY2h4c3A5VVF4STdJQm9oOXJzeFh6SXlKeS0xUEpFdE44WTJmTlBaUjB2R0syRU9oRHBCSDdvdWtqYjAteXp0VHdUTG9zanhSSndJbjRFeHNxNHpTTGRXd003OV9JeUlyTVRVRFNlUGhta1dwdG9vcTJ4bTRzRkNlcnBFS3RlS0RGQUt1Y3luVWxtYUVvenpOMUVnYXk0NlFiZ2hxRlJCWXpNaWdQNkFGTWMxdWZ0Rkxkd0k3QXJjenA4U2d4WHRxaG1oakJ0bmpJZzFxVURfcmNLRUdVTk9vUnZESHh4bnBLOVNqLXEwYnFUU1FCZHg0OEhxSmdENlZjU1hJaENCanE0SUhfeHZXUWxaZHZHSTc5WEJlMEEyb3RaT095X2d5MnkwZXhDdURXZ3dIY255WndqMThSY29VMTE0SkgtYU5qVEZoRHN1czU0dlMwQjVwaVRTMDFTN19pdWwwTGJXNE9JOXBWYz0=)
#         FCI_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmc1LWVnS3ljWGppTlNPVG8teFZERUFhejRJNThmQTlpOXFiLVV3N3JEN3F4WTJnVURXakxZdlJVMjhkYTlzVnhDX08yVkU5THNzcmhUTzdIY2dtdUFNS2l3cGc9PQ==)
#         FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmc1LWVLUFF2LVhBQXFzWVhuOWtnNHBIMkE4M1pFYWdSd2U2cTZiM2ZDbzJNME00T1gyd0xnMFRBMk1nUUZrQ1UwTllpM05IY2dSRGZwUXl0TFliN1ZnRjNxRlE9PQ==)
#         GOOGLE_PLAY_TRACK: "internal"
#         GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(Z0FBQUFBQmc1LWphRU9HdExBUzJsV2k3UUtSdTRIRkZ1aVFoU3doOWhZRWxvVDd3cXc1SXplMW5tczlqODVvTUd4ZTZ0NDNRblR6TW9DaGg1eEpoSm4wbi0ydWlhd2dyVVFRNWl6WWRpeU1GZVBfUkdCNGF3QW9pQnpUcDVZdmtFcE1Da2d1NmJkTVJxOEN6eFFCRGtUTGFqSEU0b2Z4ZDBvY1dqTDNzWVNIazlwWi1DdEk5R2xfS25jTFhrR3puQ2J0TTZRRjdKS1NiX29xN1RVSGM2NGhIWWxEWXVIUURiNnc0T3ZaU1EzWG5GNFR5UVVHa1ZDLXFvOXN6YkhYTkZQQmEySHV1TjZoRUlvQ1l2OHlJcGdaZmttRmwxVzZWaDZ3TTNSOFN4bDRGQlJ2MjZSVlhSQmRJX3NFaEcxbUVuY19PcEtid3FLX3BGdFhDS05VdnlyN0tENEtSWjIzSnM0Ny1ON3YtRkFIQmIyc19ENkFZNjBRZmFjSDJ2MTY3Nm8wMGZHSlZlUVlFSThJWnhIVExjWU14b1R1cU5GTnVCaDNmN3F6dGk1VXNZOTMxWkY2YVlpRV91SE9sMmFoU1o4R1Nnbmw2M0R5QUp0ajd6T1A0LWJraUJWbnpzRUtmdUhmdEZsRkVpNlRrQWJGSGxGSmVDaEhHWGZzUWVQMGNKMEx6NWRNSEM1clFaeWxIR2dSLVYtaWNfUTZVc1ZTa3RLUzZlSDB0c2JsZkRzMVVvMzN4V29xTGJwSGlINE9CUE83OU9wamEyWkZKVXpSaWNVaThUWVJwQ1V1X082aDZWRDA2czkyVWhSb3hWWkltRWJTNEtENVQzcmtDNllZNWQ0MHVtRnQyRUpSakJzME1GbnNRcDVUM25sNkpqLUV2NXNEWkFfb1Myd2tXQ2I0VU5XbjJOM1A4MHJSYU5faVo0U0JTbzlDY0RlcnZlbzRsRU9HaTlKV1pNLVJoNmJZS2pWMlM2OFR6OUxKVkRZQVFDTm9kR1dMTTJGZnl6ZF9Ec0pVcUF2VTdXbDBDY0RFUmcySl9sLS1KUmdzVzJYWGd5bkYzZ1BhTlJmSWVnbXRzZ2ZYa3VBZmtqZHRKcmpMZ3lFbkJ2eDA0THl1R2NzN2l1QjRaZ0EwT0owTG1wX0tUR3RXNEU1YkswbXdxMVQ3clI1LWs2c0VrTThSQjZNTmJqd0VPNFN0U3ZpOU96Zy1KVGw5NUlNekxvRlhpQ09IbmM5TjRNdFBEcDdERmtBTjMtUFNpaUx2czFvbTdRZ0ZKbEdaYU5mSEJ0czUwbklEVjBUV0k3V2RMdU44MHFqdThzWGNrUExVbjlYeDFXdlJQSElkVEh5VnFPWW1oNkRuY1ozWFdERU5TQWZtTnJGMEN3eWNPVmtTcjFYa3pyUWV5MEo1WTRmcmhZRVBncGQzT19tZ1VCN2xaR1c5SlRYUEEzSGc4ckMzT056TjExT3dJSkhhaUZ0MnZYVnp1RVBwUXJqMWxLOVpCalpUeGdXZHRoZ2dxelpwWHl4ZW52VUh1TjhmVWQwR3lJVFBxTHpsR19ueFZ3Y1RMU0FHNkgxbzZseDRJajRHNGhsSGhkMnJ6Z0F2eUVtX3pLSHRINlNDME1aQkRVeXNBdEJUX05Dc05GMzZ1OExTcy1GdnlnbF9pbXh6S2JwcWpjNTB6bHVXM00yVFJ5U2NBWXhoTkw2ZHZidUxhc3NZQ1o4blRUNXRlUTZpTjVFNmZWRkhsdEdpSWE2LXBLVzJqa3UxRDlEejF4ZWpjMTlOdVE3TGthdzd5bURnek55Z0k5MVJsWXVCVkozNFpoWHNUZmtHS0pRQjFiVldNaUhTbTRteGZwYjNsV1hjU21sVlpkTjZRcTVTNVd5cmFRVkNGS1JkRkI4UmRZN0JLTVFBWk53YnFSUGdTNHl5WEYzQkhKQmNCZmZhQlVobHkxV2h2eENCd0JuQ1kwV1RHc0hsbzlTYlNublZkOTUwU2ltUEdDTmR4bHp4TFpTSTdqQ1prY2pfWEduSm5mQzAxa3FKV1ZRa2F1bXA2c0tmVExDbDJmVG14VHFGNXFpNk5oWlJDS1R6T1VaV09vZm5aX1pRTFBGMVl2d1pYWWNTUmk5ZVp2WExoSFA4S1lzRk42eGd4clU1UEZKcHNtdWZ2NkctZTVTYUJ0T3Rad1Z2ZXFna1p3NmYzdWZGS24yVkhfeTlrR0NzYURjOFZRN0piUUZJMlZUUFN4aEhYYm1ocTk0N1A3RGhwMmxhNTNKNlZFVnNYWnFoQ1JEMGpyeXl6Sk5STFlKTW5pbXQ3Zmd4STY1NkZpZnhSSExDcXhqR01BUGQ1dExRQng5cjNzcDNlZXljQUxSYUM5VURlZ2MyWUE5RGc5dTZTRXZRekd3VjBXNkhDcFlhUU5qcHVUeXNXREFVOHEwN0NQdHp1U0VmZTZ2WmxsbjU2NVVUMld2bW9DeGJfX2NjeFl4eEFFeFc5MGlEUS0yc1B3YVpJMjRaNmhIc3FFYk04VG1MeFdSSlE1MU1keXZXLTFOTEhVaS0wVUFHb3JkTDJwQU50NERHQWtwVTRlclpMbThkYTRSdkNPWTlpeXBlWHFza010WXgyamxHUGRoM1Q3TDRReE1SY09kai1NMnBBWlRNZFpRQkVzZzFIc21uSXNrYUpQaUlwY3FqemNuM1VqUUw3Z0VPcm8zeFFscEdieWdUNDROcldmeGZFdm1sZmtHTTBRcURnRV9DSlUwQUhVTkN6RjhaV1BvRU5vMUJvWHNZbVZBVzFCSTVvZUMxQk00LVJfbVRvNWd2eEFnQmFmNmZqWXUxMHJ2NkhWNzRYMVdqSDhtSE8xVW1UekVlNHJON2dLbkI2WHBwUnBULU9MbWxleWxPeHRaZFFOUTdQdWt3dzRUR2I1dEtiRTVsZWozSnJLNGJxZ2FVeGcwQ2Zpa0FzZzVTaHpRNTZ1emtiakhXbGRESDJ3bHRFVTJrWGJxdEt2ZTM3MkxZVTA2SW1aTFl2UUlmQkUxY21aOXJwV19TX0xZXzNncjFJRk1LNUptbmdibHhQTGlxV1cyZnA2SzByS3R5WjAtUG0zS0J0cU5pMHlqaV9ucXA1Uzd2c0NZLWhJNUdVTGR4ZVRnVUJGSVdKdTF4YVVmbktnXzhOSk9VWDVUbHdpOElRVDZXcnh0ZkNld1czM0tRWjJzN2VPV190dzFKRmxSa3RJY2ZrX2VacjJhU19nVXJkaDhfNDFDbmRvOGtON1RPb09aZEFaY2tSbktleE5JWGpETWFvbm92eFNOVnNJVnpOc0N6TmJRaENQOXhIRkhMV1AxZ0tXWUNxcmFwTlc4T0RwYm5MM2s3bENIcXRfdDBiRFlKR0QyS2NQYXV5bmJxRkgtVE9qN3FxT0cwTkN3V3JLeG1kaExsMkVNbDM2Z0cwSmZ3SmlCSE04djktQ05qZzNNb2tVamVwb3BnQ1RHSkxkcXRjWkFTSW5jOVV6MkVYcjZWTXNVUE9zLWVMQTZwdVlSbEhYelBtV0NGaXZZQ3FVTWxyN0Z6NGtsUUt1NEVIUjZkbzBiNnplejIxTkUxNmR4S21na25EWlFvWWQ5djZ5Q3dVUkktd045LXNXeTFpalpQSFdQSjBHeFpTaWNERUtvMnhXeDUyWTFmQld5UWp4OEpzNE9mZWk1UE1USVNnNUZDZnJ3N0tORlJwcjItVGpTMFJ4V2gzdDI3MmN0Y2M3TF95cVgydjJJd1IyVWxleHZuMFpfNzNiT20wY1pjd1loam9qOWlSQXl3SnBjS0lrbnBEcDRlZW1vdFRSV3RkZU00aU1QN18xR1g3c1Z3UGdDNW9JWEhqZm16Wm1maHNIV0hfeVFsTktfNDlmYi1jQ243bjgwdS04Y2xpM19yenY0V3JGLU5rNzVsM19hNmgwZzV3Nm5Uc2tHdjh3YU1GdG5QN2dSNUdDd28tZjhIaFJvNy0zbjBxWW5wQ0thWmFDbUtMeldsZEFib2k4MnFiTnd3X0E0eDRBWEFsZzBVNG1Rd0Z6QjhoUkNkb1kzeGJrVkg4V3VKbHRpdDkzZVI3aE9SWTQ0YmlpazRkSzctSWZQalBnU3hwSXRiWl9mLTMwdmEzNDFrdjZDLWxSaFljdm5MM0RoQXV4cEVFY2R2U2NfZURDS29ZaWhMaHJpeE9LWWZPbXNJLWszN205ZUlqQjJJeUUzaVBDakhteTVfQXdrNWxrdjRUVXJrbDVibzlsand0bzFGdEt5M1hMd3Bqdng5NktFTFliVkpBTDlqWEJoUUVra0RhZ19KV0ljVmppWU5hSUtMcWFub0ZXRktpWjNKYmZUX1VSQkNjUFhMMDZOWVYzeTFpZTJkVGRydVYtT0F2Q09maTJneUMyekNEbEpKWTFBQXRqYUk2cGthZDlGMXdQVTdid09EVlM5cFlyQ2JDM1JsbGFPZFpyU2hULWx3N3ZjV2hGeS1HcnlvZjFXUDJLNmJGdXQ0UVRoZmlFTHlFckwxZ2tsSGlubnZTTjR2N05yUlppMFREdHdfbWVkZ1ljNTZKYVdlTDItbXdnbzlqSmhtTm1ZcXZlTmtuaGFoT1pEb1FscDQwWDNaM0lDc1l0MTVxOTRtYlhwcWZ2UU9RV1hld3M2WlR4V1pBUVl4UG1wTVZrNHU5WlI0dy1JS2NLR0hZaXZZSzRkb0h2b3dEWkVBR3F0d2pMTmQ2ajZ1eTNOY2I1eVAtRW1SYkpzNHdqTzBYZmJjMTVNaC02dUNfcjNVZWpmQWdYWUxwVlNfZ0ppcnM0eFlDZ0w5N1FuN09abE5wV0djN214elRXajRNdWk2c3JicXRyMzZSUTZmQ2FrYUVWbUdEcFdCMTVUVndBZUJrZUJVZ3RBR1BEYk5SVXFkZzJLbnBYenRvZ1QzaUd5aTM2ajdtR1VfWkI2OEhVZUZuOGNVMVl6d3hJSHhHaVRQaEpMRnpDaGwyYjFrRVAtWDJ4NnVvWUdSVm8yRENZZTF0SUR4Z2xfaVQyWWRBWFY5Y3N2dzNuS1JXTHF1QnI0aWdhbkw2Z3FqQUlDWmJIVWJ1bFZpeXpGUjNQdXNGZkltX0hVSDZ3aEZKUVFyUGl2cDRpLWN6ajVSai1PZjYyd1Y4RWZOaW5HX0dINVJDc0RXZUVsaW4wR2hhR1RHeFRlR2FVdWVlVElCdm5RT1pDZDJuY2NhbUZzNEg5M1lvQ3hKLWtIZE9Gc0I1M2hJTXpwd0kwSTA3ZVNJOGRRRUh4aXBUeTNQU183bWpEY1JpV05fNGdjd0p3WlBFUndxQnNHSWtVUDlsZE5aTm1Ud3otbzNxTG5tSEVuNjYtVXZDNnptbDBXNVlwUFFJLXRPdDdWMVNVT2NIWlJxRGhaRlNEbVdTdmdFNUdoSnVlTXpQN3Zid3JhOEJ4cmJGeWgzNEVTa2cySGc4ODJXX2xLYWFhN3pqMUdKR3ZMRGhfZjVSR29zeXBfZUs1TXI3ck9FVmRCbWpCejVibk0zdUtQUXUyUFN5RUUyQk9tRTdJNk0xVmc5ZDVOcHpPMUJnMFZUNC1JQzNLZ0Q0SU9yc09MSmd6cEFzWTBndXRvUmNPTVBFc01fZXZoc2QxYUFLY0c0Y19yWHdsbkhZMDNHdzBSd3gwX3pRc3FTSXVsa1U5V2NtbUV5dlBQRkJfUFBPZ2U0Q1NGS2tjX1d0X3FTcUt2eVVzcUdTdlp4MGF3ST0=)
#         TEST: "HELLO"
#         FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmc1LWVnS3ljWGppTlNPVG8teFZERUFhejRJNThmQTlpOXFiLVV3N3JEN3F4WTJnVURXakxZdlJVMjhkYTlzVnhDX08yVkU5THNzcmhUTzdIY2dtdUFNS2l3cGc9PQ==)    
#       flutter: stable
#       xcode: latest
#       cocoapods: default
#     triggering:
#       events:
#         - push
#       branch_patterns:
#         - pattern: '*'
#           include: true
#           source: true
#     scripts:         
#       - |
#           # set up key.properties
#           echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
#           cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
#           storePassword=$FCI_KEYSTORE_PASSWORD
#           keyPassword=$FCI_KEY_PASSWORD
#           keyAlias=$FCI_KEY_ALIAS
#           storeFile=/tmp/keystore.keystore
#           EOF
#       - |
#           # set up local properties
#           echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
#       - flutter packages pub get
#       - flutter build apk --release --build-name=2.0.$BUILD_NUMBER --build-number=$(($BUILD_NUMBER+ 1))
#       - name: App upload and Set app id in environment variable.
#         script: |
#           curl -u "nihalagazade_JxPH1i:4y5LkQnzzGkv2s7ERZ4q" -X GET "https://api-cloud.browserstack.com/app-automate/recent_apps"

# #       - echo 'previous step'         
# #       - name: 'Flutter integration test for web'
# #         script: |
# #             chromedriver --port=4444
# #             flutter config --enable-web
# #             flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/app_test.dart -d web-server --release --browser-name chrome      
#     artifacts:
# #       - build/**/outputs/**/*.apk
#       - build/**/outputs/apk/**/*.apk     
#       - build/**/outputs/**/*.aab
#       - build/**/outputs/**/mapping.txt
#       - flutter_drive.log
#     publishing:
#       email:
#         recipients:
#           - nihal@nevercode.io
#       firebase:
# #         firebase_token: Encrypted(Z0FBQUFBQmhNU1p2QUxReE9LeFM2UlIyZG9hMjFvaTVWR1JLREhNaS1vdWtIa2NTVE82M0xMT0lfLWJpczg4R2cxbXVPM2V0QlBWZjRNY0p4WldQSjlGaURZbndDY0dIVERtSWtXTWZyYVBBOTUzaXg5RUk4OUZSa2V0WmpBMGlvOW1ZcFFFMmYzYl9mOUZ6MnptazRrckRfY0tGYjNINDJwX0dYUUNBd2VXMVRWLURXTWRuODRoalkwSEZabGFrRVAwVGg0MDdXR0dzY0RBaC1ScHdzTEZHZTFEb016TnA0QT09)
#         firebase_token: $FIREBASE_TOKEN
#         android:
# #            app_id: 1:435144668371:android:c48a8d886328701e4c1026
#            app_id: 1:873868367852:android:f6495c30a71586e01fd2c9
#            groups:
#              - uran

 
